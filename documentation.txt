Python Modules Used:
- threading
- msvcrt
- csv

Files:

| main.py : Main program. Run only this to start the program properly.
| system_files
| | keyhit_reader.py : Reads keyhits. Will frequently be used by other programs to know what to do depending on the user input
| | sysfunc.py : Stores important functions related to this program.
| interfaces
| | _001_front_menu.py : Hosts text and other functions for the front menu (the menu you first see upon opening the main.py file)
| | func.py : Holds functions for ui design such as arrow scrolling
| lang
| | locale_EN.py : Stores values about non-hard coded text. This is where programmers can edit the language
| | lang_obj.py : Stores the class object used by locale_EN.py 


Logic Flow:

- main.py runs
- thread1 and thread2 runs. 
- thread2 will start the keyhit reader. The code there will mostly contain
code that's required by other py files
- thread1 will run the main code.
  - if arrow is located at the 2nd line:
    - end code
  - if arrow is located at the 1st line:
    - move to the second interface (Main Menu)
.........................................










keyhit_reader.py logic flow for initialize_keyhit_reader():
- regularly check if the program is still running
- set key_hit var to global to make get_key_hit() able to return the proper values
- special_key_hit checks if a special key is pressed. IF yes, the next hits will get checked by the switch case instead
- special_key_tag saves the key prefix sent by the special key hit (context: for example, the arrow key will make kbhit() run twice)
- while looop will run
 - if kbhit() # if a keypress is made
 - save key hit as raw_key_hit
 - if said key hit reads as backspace key:
   - run code 
 - if said key hit reads as enter key:
   - run code
 - if key hit contains special key prefix:
   - special_key_hit = True
   - special_key_tag = recorded key hit prefix
   - continue

 - if special key hit was done in a previous loop:
   - run match case to check what special key is pressed
   - then run commands
   - modify key_hit value
   - continue

 - extract the char from the getch method
 - set the value of key_hit with the extracted char value













LIST OF FILES WHERE FILE IMPORTS ARE TO BE AVOIDED AT ALL COSTS 
(BECAUSE THERE'S A HIGH CHANCE CIRCULAR IMPORTS COULD OCCUR)
- system_files/sysfuc.py
- system_files/config.py
- interfaces/func.py
- 